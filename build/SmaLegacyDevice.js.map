{
  "version": 3,
  "sources": ["../src/SmaLegacyDevice.ts"],
  "sourcesContent": ["import SmaDevice, {LoginResponse, SmaDeviceConfig} from \"./SmaDevice\";\n\n\ntype SmaLoginResponse = {\n    result: {sid: string}\n}\n\ntype ObjectValueData = {\n    [key: string]: N0DataNode | N1DataNode | N9DataNode;\n};\n\nexport type N0DataNode = { \"0\": N0Data[] };\nexport type N1DataNode = { \"1\": N1Data[] };\nexport type N9DataNode = { \"9\": N9Data[] };\nexport type N0Data = {\n    val: string\n}\nexport type N1Data = {\n    val: number\n}\nexport type N9Data = {\n    val: number | string | TaggedVal[] | null;\n    low?: number|null;\n    high?: number|null;\n    validVals?: number[];\n};\ntype TaggedVal = {tag: number}\n\nexport type GetAllOnlValuesResponse = GetValuesResponse\nexport type GetValuesResponse =  {\n    result: {\n        [key: string]: ObjectValueData;\n    };\n};\n\ntype TagTranslationResponse = {\n    [key: number|string]: string;\n};\n\nexport interface ObjectMetadata {\n    Prio:             number;\n    TagId:            number;\n    TagIdEvtMsg:      number | string;\n    Unit?:            number;\n    DataFrmt:         number;\n    Scale?:           number;\n    Typ:              number;\n    WriteLevel:       number;\n    TagHier:          number[];\n    Min?:             boolean;\n    Max?:             boolean;\n    Avg?:             boolean;\n    Cnt?:             boolean;\n    MinD?:            boolean;\n    MaxD?:            boolean;\n    Sum?:             boolean;\n    SumD?:            boolean;\n    Deprecated?:      boolean;\n    Len?:             number;\n    ParaInfo?:        string;\n    Hidden?:          boolean;\n    GridGuard?:       boolean;\n    AvgD?:            boolean;\n    SortTranslation?: boolean;\n    GroupChange?:     string[];\n}\n\ntype ObjectMetadataResponse = {\n    [key: string]: ObjectMetadata;\n};\n\n\n\n\nexport default class SmaLegacyDevice extends SmaDevice {\n\n    constructor(config: SmaDeviceConfig) {\n        super(config);\n\n        this._client.interceptors.request.use((config) => {\n            if (this._sessionToken) {\n                const url = new URL(config.url as string, config.baseURL);\n                url.searchParams.append('sid', this._sessionToken);\n                config.url = url.toString().replace(config.baseURL as string, '');\n            }\n            return config;\n        });\n    }\n\n    protected async login(): Promise<LoginResponse> {\n        return this._client.post<SmaLoginResponse>('/dyn/login.json', {\n            right: 'istl',\n            pass: this._config.password,\n        } )\n            .then(({data}): LoginResponse => {\n                return {\n                    access_token: data.result.sid,\n                };\n            })\n    }\n\n    public async getAllOnlValues (): Promise<GetAllOnlValuesResponse> {\n        return this._client.post(`/dyn/getAllOnlValues.json`, {\"destDev\":[]})\n            .then(response => response.data)\n        ;\n    }\n    public async getValues (keys: string[]): Promise<GetAllOnlValuesResponse> {\n        return this._client.post(`/dyn/getValues.json`, {\"destDev\":[], \"keys\": keys})\n            .then(response => response.data)\n        ;\n    }\n\n    public async getObjectMetaData (): Promise<ObjectMetadataResponse> {\n\n        return this._client.get(`/data/ObjectMetadata_Istl.json`)\n            .then(response => response.data)\n        ;\n    }\n\n    public async getTagTranslations (): Promise<TagTranslationResponse> {\n\n        return this._client.get(`/data/l10n/de-DE.json`)\n            .then((response) => response.data)\n        ;\n    }\n\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAwD;AA0ExD,MAAO,wBAAsC,iBAAAA,QAAU;AAAA,EAEnD,YAAY,QAAyB;AACjC,UAAM,MAAM;AAEZ,SAAK,QAAQ,aAAa,QAAQ,IAAI,CAACC,YAAW;AAC9C,UAAI,KAAK,eAAe;AACpB,cAAM,MAAM,IAAI,IAAIA,QAAO,KAAeA,QAAO,OAAO;AACxD,YAAI,aAAa,OAAO,OAAO,KAAK,aAAa;AACjD,QAAAA,QAAO,MAAM,IAAI,SAAS,EAAE,QAAQA,QAAO,SAAmB,EAAE;AAAA,MACpE;AACA,aAAOA;AAAA,IACX,CAAC;AAAA,EACL;AAAA,EAEA,MAAgB,QAAgC;AAC5C,WAAO,KAAK,QAAQ,KAAuB,mBAAmB;AAAA,MAC1D,OAAO;AAAA,MACP,MAAM,KAAK,QAAQ;AAAA,IACvB,CAAE,EACG,KAAK,CAAC,EAAC,KAAI,MAAqB;AAC7B,aAAO;AAAA,QACH,cAAc,KAAK,OAAO;AAAA,MAC9B;AAAA,IACJ,CAAC;AAAA,EACT;AAAA,EAEA,MAAa,kBAAqD;AAC9D,WAAO,KAAK,QAAQ,KAAK,6BAA6B,EAAC,WAAU,CAAC,EAAC,CAAC,EAC/D,KAAK,cAAY,SAAS,IAAI;AAAA,EAEvC;AAAA,EACA,MAAa,UAAW,MAAkD;AACtE,WAAO,KAAK,QAAQ,KAAK,uBAAuB,EAAC,WAAU,CAAC,GAAG,QAAQ,KAAI,CAAC,EACvE,KAAK,cAAY,SAAS,IAAI;AAAA,EAEvC;AAAA,EAEA,MAAa,oBAAsD;AAE/D,WAAO,KAAK,QAAQ,IAAI,gCAAgC,EACnD,KAAK,cAAY,SAAS,IAAI;AAAA,EAEvC;AAAA,EAEA,MAAa,qBAAuD;AAEhE,WAAO,KAAK,QAAQ,IAAI,uBAAuB,EAC1C,KAAK,CAAC,aAAa,SAAS,IAAI;AAAA,EAEzC;AAEJ;",
  "names": ["SmaDevice", "config"]
}
