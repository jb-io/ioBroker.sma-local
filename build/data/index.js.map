{
  "version": 3,
  "sources": ["../../src/data/index.ts"],
  "sourcesContent": ["import evChargerDevices from './ev-charger.devices';\nimport tripowerXDevices from './tripower-x.device';\n\nimport evChargerMessagesDe from './ev-charger.messages.de';\nimport evChargerMessagesEn from './ev-charger.messages.en';\nimport tripowerXMessagesDe from './tripower-x.messages.de';\nimport tripowerXMessagesEn from './tripower-x.messages.en';\n\nimport evChargerMetaDe from './ev-charger.meta.de';\nimport evChargerMetaEn from './ev-charger.meta.en';\nimport tripowerXMetaDe from './tripower-x.meta.de';\nimport tripowerXMetaEn from './tripower-x.meta.en';\n\nexport type Device = {\n    unit: string\n    displayGroup: string\n    translationId: string\n    displayPrecision: number\n    valueType: string\n}\nexport type Devices = {[key: string]: Device};\n\nexport type MetaItems = {[key: number|string]:string}\nexport type Meta = {META: MetaItems}\n\nexport type Messages = {[key: string]: {[key: string]:string}}\n\ntype DeviceType = 'TripowerX' | 'EvCharger';\ntype Language = 'de' | 'en';\n\nexport function getDevices(type: DeviceType): Devices {\n    const data = {\n        TripowerX: tripowerXDevices,\n        EvCharger: evChargerDevices,\n    }\n    return data[type];\n}\n\nexport function getMessages(type: DeviceType, lang: Language): Messages {\n    const data = {\n        TripowerX: {\n            de: tripowerXMessagesDe,\n            en: tripowerXMessagesEn,\n        },\n        EvCharger: {\n            de: evChargerMessagesDe,\n            en: evChargerMessagesEn,\n        },\n    }\n    return data[type][lang];\n}\n\nexport function getMeta(type: DeviceType, lang: Language): Meta {\n    const data = {\n        TripowerX: {\n            de: tripowerXMetaDe,\n            en: tripowerXMetaEn,\n        },\n        EvCharger: {\n            de: evChargerMetaDe,\n            en: evChargerMetaEn,\n        },\n    }\n    return data[type][lang];\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA6B;AAC7B,wBAA6B;AAE7B,iCAAgC;AAChC,IAAAA,8BAAgC;AAChC,iCAAgC;AAChC,IAAAC,8BAAgC;AAEhC,6BAA4B;AAC5B,IAAAC,0BAA4B;AAC5B,6BAA4B;AAC5B,IAAAC,0BAA4B;AAmBrB,SAAS,WAAW,MAA2B;AAClD,QAAM,OAAO;AAAA,IACT,WAAW,kBAAAC;AAAA,IACX,WAAW,kBAAAC;AAAA,EACf;AACA,SAAO,KAAK,IAAI;AACpB;AAEO,SAAS,YAAY,MAAkB,MAA0B;AACpE,QAAM,OAAO;AAAA,IACT,WAAW;AAAA,MACP,IAAI,2BAAAC;AAAA,MACJ,IAAI,4BAAAC;AAAA,IACR;AAAA,IACA,WAAW;AAAA,MACP,IAAI,2BAAAC;AAAA,MACJ,IAAI,4BAAAC;AAAA,IACR;AAAA,EACJ;AACA,SAAO,KAAK,IAAI,EAAE,IAAI;AAC1B;AAEO,SAAS,QAAQ,MAAkB,MAAsB;AAC5D,QAAM,OAAO;AAAA,IACT,WAAW;AAAA,MACP,IAAI,uBAAAC;AAAA,MACJ,IAAI,wBAAAC;AAAA,IACR;AAAA,IACA,WAAW;AAAA,MACP,IAAI,uBAAAC;AAAA,MACJ,IAAI,wBAAAC;AAAA,IACR;AAAA,EACJ;AACA,SAAO,KAAK,IAAI,EAAE,IAAI;AAC1B;",
  "names": ["import_ev_charger_messages", "import_tripower_x_messages", "import_ev_charger_meta", "import_tripower_x_meta", "tripowerXDevices", "evChargerDevices", "tripowerXMessagesDe", "tripowerXMessagesEn", "evChargerMessagesDe", "evChargerMessagesEn", "tripowerXMetaDe", "tripowerXMetaEn", "evChargerMetaDe", "evChargerMetaEn"]
}
